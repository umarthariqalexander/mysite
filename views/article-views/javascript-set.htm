<div class="article-wrapper">
    <div class="article-heading">Learn ES6 new data structure Set</div>
    <div class="sub-heading">Introduction</div>
    <div class="content">Set is an object data type in JavaScript and it only allows to store unique values in it. It allows you to store heterogeneous data types. </div>
    <div class="content m-b-10">You can iterate through the elements of a Set in insertion order.</div>
    <div class="content m-b-10">Hence Set can only contains unique values, the value of each elements of Set has to be checked for itâ€™s uniqueness before getting inserted.</div>
    <div class="content m-b-10">Some exceptional cases due to unique nature of Set,</div>
    <ul>
        <li>Usually NaN !== NaN but here NaN === NaN (both are same)</li>
        <li>+0 is equals to -0.</li>
    </ul>


    <div class="sub-heading">Properties of Set</div>
    <div class="content">Length of a Set - Set.size</div>
    <div class="code-snippet">
    <textarea disabled="true" class="code-wrapper" rows="5">

    let SampleSet = new Set([23, 'apple', 'orange', 'grapes', 'mango', 78]);

    SampleSet.size  // 6
    </textarea>
    </div>        
    <div class="sub-heading">Methods of Set</div>
    <div class="content">To add a new element - add()</div>
    <div class="code-snippet">
    <textarea disabled="true" class="code-wrapper" rows="5">

    let SampleSet = new Set([23, 'apple', 'orange', 'grapes', 'mango', 78]);

    SampleSet.add('Jack Fruit'); // {23, "apple", "orange", "grapes", "mango", "Jack Fruit"}

    </textarea>
    </div>  

    <div class="content">To find a element - has()</div>
    <div class="code-snippet">
    <textarea disabled="true" class="code-wrapper" rows="7">   
    let SampleSet = new Set([23, 'apple', 'orange', 'grapes', 'mango', 78]);

    SampleSet.has('apple') // true
    
    SampleSet.has('camel') // false

    </textarea>
    </div>

    <div class="content">To delete a element - delete()</div>
    <div class="code-snippet">
    <textarea disabled="true" class="code-wrapper" rows="7">   
    let SampleSet = new Set([23, 'apple', 'orange', 'grapes', 'mango', 78]);

    SampleSet.delete('apple'); // true
    
    SampleSet.delete('lion') // false

    </textarea>
    </div>

    <div class="content">To enumerate over the elements - forEach()</div>
    <div class="code-snippet">
    <textarea disabled="true" class="code-wrapper" rows="7">   
    let SampleSet = new Set([23, 'apple', 'orange', 'grapes', 'mango', 78]);

    SampleSet.forEach(item=>{
        console.log(item);
    });

    </textarea>
    </div>

    <div class="content">To get the iterator of Set elements - entries()</div>
    <div class="code-snippet">
    <textarea disabled="true" class="code-wrapper" rows="9">   
    let SampleSet = new Set([23, 'apple', 'orange', 'grapes', 'mango', 78]);

    let iterator = SampleSet.entries();
    
    while(iterator.next().value){
        console.log(iterator.next());
    }

    </textarea>
    </div>


    <div class="m-b-40 m-t-40"> Thanks and Welcome back !!!</div>
</div>